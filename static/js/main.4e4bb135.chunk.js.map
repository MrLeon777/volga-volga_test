{"version":3,"sources":["product.ts","store/index.ts","components/Cart.tsx","components/AddCart.tsx","components/PizzaDescription.tsx","components/PizzaBlock.tsx","App.tsx","index.tsx"],"names":["product","title","category","description","image","price","weight","energy","size","type","id","variant","getApiProduct","initialState","shoppingCart","createStore","state","action","payload","StyledCart","styled","div","Cart","AddCardBtn","button","AddCart","currentPrice","dispatch","useDispatch","onClick","PizzaContent","PizzaValues","PizzaButtons","PizzaPrice","store","subscribe","console","info","getState","PizzaDescription","useState","activeObject","types","availableTypes","setAvailableTypes","sizes","availableSizes","setAvailableSizes","currentType","setType","currentSize","setSize","setPrice","currentWeight","setWeight","currentEnergy","setEnergy","changeActiveType","index","changeActiveSize","useEffect","forEach","item","getInfoProduct","map","pizzatype","className","pizzasize","PizzaBlockWrapper","PizzaImg","img","PizzaBlock","src","alt","Wrapper","connect","Boolean","length","reduce","prev","current","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e4bb135.chunk.js","sourcesContent":["/* eslint-disable max-len */\n\nexport interface ApiProduct {\n  id: string;\n  price: number;\n  image: string;\n  title: string;\n  category: string;\n  description: string;\n\n  weight: number;\n  energy: number;\n\n  type: 'common' | 'thin';\n  size: 's' | 'm' | 'l';\n\n  variant: ApiProductVariant[];\n}\n\nexport type ApiProductVariant = Omit<\n  ApiProduct,\n  'variant' | 'title' | 'category' | 'description' | 'image'\n>;\n\nconst product: ApiProduct = {\n  title: '8 Сезонов',\n  category: 'Пицца',\n  description:\n    'Колбаски, пепперони, халапеньо, шампиньоны, томаты, бекон, цыпленок, чеснок, огурцы соус Барбекю, соус Рэнч, фирменный томатный соус, моцарелла.',\n  image: 'https://momentopizza.ru/images/vid-pizza.jpg',\n\n  price: 100,\n  weight: 700,\n  energy: 2220,\n\n  size: 's',\n  type: 'common',\n  id: '73f5cd52-2c0d-44a0-b902-d267501a35b1',\n\n  variant: [\n    {\n      price: 200,\n      weight: 900,\n      energy: 2620,\n\n      size: 'm',\n      type: 'common',\n      id: '43a76941-c7df-467f-9d43-834c80fb5dc2',\n    },\n    {\n      price: 300,\n      weight: 1100,\n      energy: 3000,\n\n      size: 'l',\n      type: 'common',\n      id: '86544daa-6017-42c2-ab3e-cd689b675bae',\n    },\n    {\n      price: 400,\n      weight: 800,\n      energy: 2340,\n\n      size: 'm',\n      type: 'thin',\n      id: '0d716812-9557-4cee-9ed1-e9a8b6dd622f',\n    },\n    {\n      price: 500,\n      weight: 1000,\n      energy: 2780,\n\n      size: 'l',\n      type: 'thin',\n      id: '920f2164-8c0a-4000-ad6b-016d229f15a5',\n    },\n  ],\n};\n\nconst getApiProduct = () => {\n  return product;\n};\n\n\nexport default getApiProduct;\n","import { AnyAction, createStore } from \"redux\";\r\nimport getApiProduct, { ApiProduct } from \"../product\";\r\n\r\nexport interface IState extends ApiProduct { \r\n  shoppingCart: number[] \r\n}\r\n\r\nconst initialState: IState = {\r\n  ...getApiProduct(),\r\n  shoppingCart: [],\r\n};\r\n\r\nconst myReducer = (state = initialState, action: AnyAction) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case \"ADD_CART\":\r\n      return {\r\n        ...state,\r\n        shoppingCart: [...state.shoppingCart, payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default createStore(myReducer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCart = styled.div`\r\n  background-color: #8287b6;\r\n  width: 100%;\r\n  height: 70px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #fff;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n`;\r\n\r\ninterface CartProps {\r\n  price: number\r\n}\r\n\r\nconst Cart: React.FC<CartProps> = ({ price }) => {\r\n  return <StyledCart>{`Итого к оплате: ${price} ₽`}</StyledCart>;\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst AddCardBtn = styled.button`\r\n  width: 200px;\r\n  height: 60px;\r\n  background-color: #4cc27f;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 16px;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #139c4e;\r\n    transition: all 0.3s ease-in-out;\r\n  }\r\n`;\r\n\r\nconst AddCart: React.FC<{ currentPrice: null | number }> = ({\r\n  currentPrice,\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddCart = (payload: number | null) => {\r\n    dispatch({\r\n      type: \"ADD_CART\",\r\n      payload,\r\n    });\r\n  };\r\n  return (\r\n    <AddCardBtn onClick={() => onAddCart(currentPrice)}>В корзину</AddCardBtn>\r\n  );\r\n};\r\n\r\nexport default AddCart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport store from \"../store\";\r\nimport AddCart from \"./AddCart\";\r\n\r\ndeclare module \"react\" {\r\n  interface HTMLAttributes<T> extends DOMAttributes<T> {\r\n    pizzatype?: string;\r\n    pizzasize?: string;\r\n    currentPrice?: null | number;\r\n  }\r\n}\r\n\r\nconst PizzaContent = styled.div`\r\n  margin-left: 72px;\r\n  h2 {\r\n    color: #9c9c9c;\r\n  }\r\n  p {\r\n    color: #5f5f5f;\r\n  }\r\n`;\r\n\r\nconst PizzaValues = styled.div`\r\n  display: flex;\r\n  span:first-child {\r\n    margin-right: 75px;\r\n  }\r\n  margin: 50px 0;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst PizzaButtons = styled.div`\r\n  ul {\r\n    padding: 0;\r\n    width: 100%;\r\n    list-style-type: none;\r\n    display: flex;\r\n    border: 2px solid #d0d0d0;\r\n    border-radius: 10px;\r\n    li {\r\n      flex: 1 1;\r\n      text-align: center;\r\n      padding: 25px 0;\r\n      font-weight: 700;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background-color: #d5f0de;\r\n        &:first-child {\r\n          border-radius: 8px 0 0 8px;\r\n        }\r\n        &:last-child {\r\n          border-radius: 0 8px 8px 0;\r\n        }\r\n      }\r\n      &.active {\r\n        background-color: #4cc27f;\r\n        color: #fff;\r\n        &:first-child {\r\n          border-radius: 8px 0 0 8px;\r\n        }\r\n        &:last-child {\r\n          border-radius: 0 8px 8px 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PizzaPrice = styled.div`\r\n  font-weight: 700;\r\n  font-size: 40px;\r\n`;\r\n\r\n\r\n\r\ninterface availableType {\r\n  activeObject: { title: string; type: string; id: string };\r\n  types: Array<{ title: string; type: string; id: string }>;\r\n}\r\ninterface availableSize {\r\n  activeObject: { title: string; size: string; id: string };\r\n  sizes: Array<{ title: string; size: string; id: string }>;\r\n}\r\n\r\nstore.subscribe(() => console.info(store.getState()));\r\n\r\nconst PizzaDescription: React.FC = () => {\r\n  const [availableTypes, setAvailableTypes] = useState<availableType>({\r\n    activeObject: { title: \"Обычное тесто\", type: \"common\", id: \"0\" },\r\n    types: [\r\n      { title: \"Обычное тесто\", type: \"common\", id: \"0\" },\r\n      { title: \"Тонкое тесто\", type: \"thin\", id: \"1\" },\r\n    ],\r\n  });\r\n  const [availableSizes, setAvailableSizes] = useState<availableSize>({\r\n    activeObject: { title: \"Маленькая\", size: \"s\", id: \"0\" },\r\n    sizes: [\r\n      { title: \"Маленькая\", size: \"s\", id: \"0\" },\r\n      { title: \"Средняя\", size: \"m\", id: \"1\" },\r\n      { title: \"Большая\", size: \"l\", id: \"2\" },\r\n    ],\r\n  });\r\n\r\n  const [currentType, setType] = useState<string | null>(null);\r\n  const [currentSize, setSize] = useState<string | null>(null);\r\n\r\n  const [currentPrice, setPrice] = useState<null | number>(null);\r\n  const [currentWeight, setWeight] = useState<number | null>(null);\r\n  const [currentEnergy, setEnergy] = useState<number | null>(null);\r\n\r\n  const getInfoProduct = () => {\r\n    const type = currentType;\r\n    const size = currentSize;\r\n    if (store.getState().size === size && store.getState().type === type) {\r\n      setPrice(store.getState().price);\r\n      setWeight(store.getState().weight);\r\n      setEnergy(store.getState().energy);\r\n    } else {\r\n      store.getState().variant.forEach((item) => {\r\n        if (item.size === size && item.type === type) {\r\n          setPrice(item.price);\r\n          setWeight(item.weight);\r\n          setEnergy(item.energy);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  function changeActiveType(index: number): string {\r\n    return availableTypes.types[index].id === availableTypes.activeObject.id\r\n      ? \"active\"\r\n      : \"\";\r\n  }\r\n  function changeActiveSize(index: number): string {\r\n    return availableSizes.sizes[index].id === availableSizes.activeObject.id\r\n      ? \"active\"\r\n      : \"\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    setType(availableTypes.activeObject.type);\r\n    setSize(availableSizes.activeObject.size);\r\n  }, [availableTypes, availableSizes]);\r\n\r\n  useEffect(() => {\r\n    if (currentType === \"common\") {\r\n      setAvailableSizes({\r\n        ...availableSizes,\r\n        activeObject: availableSizes.sizes[0],\r\n      });\r\n    } else {\r\n      setAvailableSizes({\r\n        ...availableSizes,\r\n        activeObject: availableSizes.sizes[1],\r\n      });\r\n    }\r\n  }, [currentType]);\r\n\r\n  useEffect(() => {\r\n    getInfoProduct();\r\n  }, [currentType, currentSize]);\r\n  \r\n\r\n  return (\r\n    <PizzaContent>\r\n      <h2>{store.getState().category}</h2>\r\n      <h1>{store.getState().title}</h1>\r\n      <p>{store.getState().description}</p>\r\n      <PizzaValues>\r\n        <span>{`${currentWeight} г`}</span>\r\n        <span>{`${currentEnergy} ккал`}</span>\r\n      </PizzaValues>\r\n      <PizzaButtons>\r\n        <ul>\r\n          {availableTypes.types.map((item, index) => (\r\n            <li\r\n              key={index}\r\n              pizzatype={item.type}\r\n              className={changeActiveType(index)}\r\n              onClick={() => {\r\n                setAvailableTypes({\r\n                  ...availableTypes,\r\n                  activeObject: availableTypes.types[index],\r\n                });\r\n              }}>\r\n              {item.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ul>\r\n          {availableSizes.sizes.map((item, index) => !(currentType === 'thin' && item.size === 's') && (\r\n            <li\r\n              key={index}\r\n              pizzasize={item.size}\r\n              className={changeActiveSize(index)}\r\n              onClick={() => {\r\n                setAvailableSizes({\r\n                  ...availableSizes,\r\n                  activeObject: availableSizes.sizes[index],\r\n                });\r\n              }}>\r\n              {item.title}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </PizzaButtons>\r\n      <PizzaPrice>{`${currentPrice} ₽`}</PizzaPrice>\r\n      <AddCart currentPrice={currentPrice}></AddCart>\r\n    </PizzaContent>\r\n  );\r\n};\r\n\r\nexport default PizzaDescription;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport store from \"../store\";\r\n\r\nimport PizzaDescription from \"./PizzaDescription\";\r\n\r\nconst PizzaBlockWrapper = styled.div`\r\n  margin: auto;\r\n  display: flex;\r\n  width: 1100px;\r\n  font-family: sans-serif;\r\n`;\r\n\r\nconst PizzaImg = styled.img`\r\n  width: 500px;\r\n  height: 500px;\r\n  border-radius: 10px;\r\n  user-select: none;\r\n`;\r\n\r\nconst PizzaBlock: React.FC = () => {\r\n  return (\r\n    <PizzaBlockWrapper>\r\n      <PizzaImg\r\n        src={store.getState().image}\r\n        alt=\"pizza_image\"\r\n      />\r\n      <PizzaDescription>\r\n        \r\n      </PizzaDescription>\r\n      \r\n    </PizzaBlockWrapper>\r\n\r\n  );\r\n};\r\n\r\nexport default PizzaBlock;\r\n","import React from \"react\";\nimport Cart from \"./components/Cart\";\nimport PizzaBlock from \"./components/PizzaBlock\";\nimport styled from \"styled-components\";\nimport { IState } from \"./store\";\nimport { connect } from \"react-redux\";\n\nconst Wrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  width: 100vw;\n  height: 100vh;\n  font-family: sans-serif;\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface AppProps {\n  shoppingCart: number[];\n}\n\nconst App: React.FC<AppProps> = ({ shoppingCart }) => {\n  return (\n    <Wrapper>\n      <PizzaBlock></PizzaBlock>\n      {Boolean(shoppingCart.length) && (\n        <Cart price={shoppingCart.reduce((prev, current) => current + prev)} />\n      )}\n    </Wrapper>\n  );\n};\n\nexport default connect(({ shoppingCart }: IState) => ({\n  shoppingCart,\n}))(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}